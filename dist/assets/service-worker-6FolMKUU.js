const c="static-cache-v1",r="api-cache-v1",n=["/","/index.html","/manifest.json","/favicon.ico","/static/js/main.js","/static/css/main.css"];self.addEventListener("install",e=>{e.waitUntil(Promise.all([caches.open(c).then(s=>(console.log("Caching static files"),s.addAll(n))),caches.open(r)])),self.skipWaiting()});self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(s=>Promise.all(s.map(t=>{if(t!==c&&t!==r)return console.log("Deleting old cache:",t),caches.delete(t)})))),e.waitUntil(clients.claim())});const i=e=>e.url.includes("api.sampleapis.com");self.addEventListener("fetch",e=>{e.respondWith((async()=>{try{if(i(e.request)){const s=await caches.match(e.request);if(s&&!navigator.onLine)return s;try{const t=await fetch(e.request),a=t.clone();return await(await caches.open(r)).put(e.request,a),t}catch{const a=await caches.match(e.request);return a||new Response(JSON.stringify({error:"No cached data available and network request failed"}),{status:503,headers:{"Content-Type":"application/json"}})}}else{const s=await caches.match(e.request);if(s)return s;try{const t=await fetch(e.request);return await(await caches.open(c)).put(e.request,t.clone()),t}catch(t){if(e.request.headers.get("accept").includes("text/html"))return caches.match("/index.html");throw t}}}catch(s){return console.error("Service Worker fetch error:",s),new Response("Offline",{status:503,statusText:"Service Unavailable"})}})())});
//# sourceMappingURL=service-worker-6FolMKUU.js.map
